name: Build GCP Artifact Registry Image

on:
  workflow_dispatch:
    inputs:
      cpu:
        description: CPU for the infra block
        required: true
        default: 1
        type: integer
      memory:
        description: Memory for the infra block
        required: true
        default: 512
        type: integer
#        options: ['512', '1024', '2048', '4096', '5120', '6144', '7168', '8192']
      gcs_path:
        description: GCS path in the format bucket/path
        required: true
        default: 'prefect-orion/flows'
      block_name:
        description: Name of the GCS and Cloud Run blocks
        required: true
        default: 'default'
      gcp_project_id:
        description: Name of the GCP project ID
        required: true
        default: 'prefect-community'      
      prefect-version:
        description: Prefect version for flows
        required: true
        default: '2.*'
        type: string
      region:
        description: GCP Region
        required: true
        default: 'us-east1'
        type: string
      ar_repository:
        description: Artifact Registry Repository
        required: true
        default: 'sls' # 'us-east1-docker.pkg.dev/prefect-community/sls/prefect:latest'
        type: string

env:
  PROJECT: ${{ github.event.inputs.gcp_project_id }}
  REPO: ${{ github.event.inputs.ar_repository }}
  REGION: ${{ github.event.inputs.region }}
  SERVICE: prefect
  PREFECT_VERSION: ${{ github.event.inputs.prefect-version }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: '${{ env.REGION }}-docker.pkg.dev'
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and Push Docker Image
        id: build-image
        run: |-
          export IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:latest"
          docker build -t $IMAGE -f Dockerfile.gcp .
          docker push $IMAGE
          echo "::set-output name=image::$IMAGE"
#      - name: Build and Push Container
#        run: |-
#          docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:${{ github.sha }}" -f Dockerfile.gcp .
#          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:${{ github.sha }}"
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.6"

      - name: Python dependencies
        run: |
          pip install prefect==$PREFECT_VERSION
          pip install prefect-gcp

      - name: Prefect Cloud login
        run: |
          prefect config set PREFECT_API_KEY=${{ secrets.PREFECT_API_KEY }}
          prefect config set PREFECT_API_URL=${{ secrets.PREFECT_API_URL }}

      - name: Create Blocks
        id: blocks
        run: |
          cat <<EOF > blocks.py
          from prefect_gcp.cloud_run import CloudRunJob
          from prefect_gcp.credentials import GcpCredentials
          
          block_ = "${{ github.event.inputs.block_name }}"
          cpu_ = "${{ github.event.inputs.cpu }}"
          memory_ = "${{ github.event.inputs.memory }}"
          img_ = "${{ steps.build-image.outputs.image }}"
          
          crj = CloudRunJob(
              image=img_,
              region="$REGION",
              credentials=GcpCredentials.load(block_),
              cpu=cpu_,
              memory=memory_,
              memory_unit="Mi"
            )
          crj.save(block_, overwrite=True)
          EOF
          python blocks.py
