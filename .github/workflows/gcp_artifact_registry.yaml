name: Build GCP Artifact Registry Image

on:
  workflow_dispatch:
    inputs:
      cpu:
        description: CPU for the agent
        required: true
        default: '512'
        type: choice
        options: ['256', '512', '1024', '2048', '4096']
      memory:
        description: Memory for the agent
        required: true
        default: '1024'
        type: choice
        options: ['512', '1024', '2048', '4096', '5120', '6144', '7168', '8192']
      gcs_path:
        description: GCS path in the format bucket/path
        required: true
        default: 'prefect-orion/flows'
      block_name:
        description: Name of the GCS and Cloud Run blocks
        required: true
        default: 'default'
      gcp_project_id:
        description: Name of the GCP project ID
        required: true
        default: 'prefect-community'      
      prefect-version:
        description: Prefect version for flows
        required: true
        default: '2.*'
        type: string
      region:
        description: GCP Region
        required: true
        default: 'us-east1'
        type: string
      ar_repository:
        description: Artifact Registry Repository
        required: true
        default: 'sls' # 'us-east1-docker.pkg.dev/prefect-community/sls/prefect:latest'
        type: string

env:
  PROJECT: ${{ github.event.inputs.gcp_project_id }}
  REPO: ${{ github.event.inputs.ar_repository }}
  REGION: ${{ github.event.inputs.region }}
  SERVICE: prefect

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: '${{ env.REGION }}-docker.pkg.dev'
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:latest" -f Dockerfile.gcp .
          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:latest"

#      - name: Build and Push Container
#        run: |-
#          docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:${{ github.sha }}" -f Dockerfile.gcp .
#          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:${{ github.sha }}"

      - name: Create Blocks
        id: blocks
        run: |
          cat <<EOF > blocks.py
          from prefect_gcp.cloud_run import CloudRunJob
          from prefect_gcp.credentials import GcpCredentials
          from prefect.filesystems import GCS

          sa_ = "${{ secrets.GCP_CREDENTIALS }}"
          block_ = "${{ github.event.inputs.block_name }}"
          path_ = "${{ github.event.inputs.gcs_path }}"
          cpu_ = "${{ github.event.inputs.cpu }}"
          memory_ = "${{ github.event.inputs.memory }}"

          creds = GcpCredentials(service_account_info=sa_)
          creds.save(block_, overwrite=True)
          gcs = GCS(service_account_info=sa_, bucket_path=path_)
          gcs.save(block_, overwrite=True)

          
          img_ = "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/prefect:latest"
          cpu_ = "${{ github.event.inputs.cpu }}"
          memory_ = "${{ github.event.inputs.memory }}"
          
          crj = CloudRunJob(
              image=img_,
              region="$REGION",
              credentials=GcpCredentials.load(block_),
              cpu=cpu_,
            )
          crj.save(block_, overwrite=True)
          EOF
          python blocks.py
